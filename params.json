{"name":"Wearkit","tagline":"Wearkit is an Android Wear implementation of WatchKit","body":"WearKit\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/florent37/WearKit.svg?branch=master)](https://travis-ci.org/florent37/WearKit)\r\n\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content1.png)\r\n\r\nWearkit is an Android Wear implementation of WatchKit.\r\n\r\nDownload\r\n--------\r\n\r\nIn your root build.gradle add\r\n```groovy\r\nrepositories {\r\n    maven {\r\n        url  \"http://dl.bintray.com/florent37/maven\"\r\n    }\r\n}\r\n```\r\n\r\nIn your wear module [ ![Download](https://api.bintray.com/packages/florent37/maven/WearKit/images/download.svg) ](https://bintray.com/florent37/maven/WearKit/_latestVersion)\r\n```groovy\r\ncompile 'com.github.florent37:wearkit:1.0.0@aar'\r\n```\r\n\r\nUsage\r\n--------\r\n\r\nStatusBar\r\n--------\r\n\r\nYou can add a status bar, displaying application name and current time.\r\n\r\n![alt sample_status](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_status.png)\r\n\r\nIn your activity layout, add StatusBarView\r\n```xml\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/black\">\r\n\r\n    <com.github.florent37.wearkit.view.StatusBarView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n</FrameLayout>\r\n```\r\n\r\nThe Status Bar Title respond to Activity's title, but you can change it with .setTitle\r\n\r\n```java\r\nStatusBarView statusBarView = (StatusBarView) findViewById(R.id.statusBar);\r\nstatusBarView.setTitle(\"MyTitle\");\r\n```\r\n\r\nYou can set the title color\r\n```xml\r\n<com.github.florent37.wearkit.view.StatusBarView\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    app:titleColor=\"@color/blue\"/>\r\n```\r\n\r\n```java\r\nstatusBarView.setTitleColor(Color.BLUE  );\r\n```\r\n\r\nYou can also add a Back button to the status bar\r\n\r\n```xml\r\n<com.github.florent37.wearkit.view.StatusBarView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:backEnabled=\"true\"\r\n        />\r\n```\r\n\r\n```java\r\nstatusBarView.setBackEnabled(true);\r\n```\r\n\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_back.png)\r\n\r\nClicking on the status bar will finish the current Activity\r\n\r\nModal Sheets - Page\r\n--------\r\n\r\nIn Wearkit, navigation is based on Pagination. The user swipe from right to left to switch from one to another page.\r\n\r\nEach page is divided in two sections.\r\nThe main content, displayed at least on full height of the wear screen ; and the secondary content, displayed below.\r\n\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content1.png)\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content2.png)\r\n\r\nTo enable Pagination, add a Pager to your activity layout\r\n\r\n```xml\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/black\">\r\n\r\n    <com.github.florent37.wearkit.view.Pager\r\n        android:id=\"@+id/viewPager\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"/>\r\n\r\n    <com.github.florent37.wearkit.view.StatusBarView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n</FrameLayout>\r\n```\r\n\r\nThen create your pages extending wearkit.Page\r\n\r\n```java\r\npublic class CustomPage extends Page {\r\n    @Override\r\n    public View onCreatePageContent(LayoutInflater inflater, @Nullable ViewGroup container) {\r\n        return inflater.inflate(R.layout.content2, container, false);\r\n    }\r\n\r\n    @Override\r\n    public View onCreatePageSecondaryContent(LayoutInflater inflater, @Nullable ViewGroup container) {\r\n        return inflater.inflate(R.layout.content2_secondary, container, false);\r\n    }\r\n}\r\n```\r\n\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content1.png)\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content1_second.png)\r\n\r\nYou can also generate a page with secondary options buttons extending wearkit.PageWithActions\r\n\r\n```java\r\npublic class PageWithImage extends PageWithActions {\r\n    @Override\r\n    public View onCreatePageContent(LayoutInflater inflater, @Nullable ViewGroup container) {\r\n        return inflater.inflate(R.layout.content, container, false);\r\n    }\r\n\r\n    @Override\r\n    public Actions onCreatePageActions() {\r\n        return new Actions(\r\n                new String[]{\"ok\", \"nope\"},\r\n                true\r\n        );\r\n    }\r\n\r\n    @Override\r\n    protected void clickedOnAction(int position) {\r\n\r\n    }\r\n}\r\n```\r\n\r\nActions are constructed with the buttons label. A boolean will enable/disable the dismiss button.\r\n(Clicking on the dismiss btn will trigger a scroll to top.)\r\n\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content2.png)\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_content2_second.png)\r\n\r\nAnd add an adapter (based on ViewPager FragmentStatePagerAdapter)\r\n\r\n```java\r\nviewPager = (Pager) findViewById(R.id.viewPager);\r\nviewPager.setAdapter(new FragmentStatePagerAdapter(getSupportFragmentManager()) {\r\n            @Override\r\n            public Fragment getItem(final int position) {\r\n                if (position % 2 == 0) {\r\n                    return new PageWithImage();\r\n                } else {\r\n                    return new CustomPage();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public int getCount() {\r\n                return 5;\r\n            }\r\n        });\r\n```\r\n\r\nContextual menu\r\n--------\r\n\r\nYou can display a ContextualMenu, accessible by a long press on any page content.\r\n\r\n![alt sample_menu](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_menu.png)\r\n\r\nIn your activity layout, add ContextualMenu\r\n```xml\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/black\">\r\n\r\n    <com.github.florent37.wearkit.view.Pager\r\n        android:id=\"@+id/viewPager\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"/>\r\n\r\n    <com.github.florent37.wearkit.view.StatusBarView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n    <com.github.florent37.wearkit.view.ContextualMenu\r\n        android:id=\"@+id/menu\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"/>\r\n\r\n</FrameLayout>\r\n```\r\n\r\nFill in your code with it (4 entries max)\r\n\r\n```java`\r\nContextualMenu contextualMenu = ((ContextualMenu) findViewById(R.id.menu));\r\ncontextualMenu.setMenuEntries(new String[]{\r\n                \"Accept\",\r\n                \"Decline\"\r\n        }, new Drawable[]{\r\n                getResources().getDrawable(R.drawable.wearkit_menu_accept),\r\n                getResources().getDrawable(R.drawable.wearkit_menu_decline)\r\n        });\r\n```\r\n\r\nAnd listen to the user interraction\r\n\r\n```java`\r\ncontextualMenu.setOnMenuClickListener(new ContextualMenu.OnMenuClickListener() {\r\n            @Override\r\n            public void onMenuClick(int position) {\r\n\r\n            }\r\n        });\r\n```\r\n\r\nStyling\r\n--------\r\n\r\nWearkit come with his styled widgets\r\n\r\n**Group**\r\n\r\n```xml\r\n<LinearLayout\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_width=\"140dp\"\r\n        android:orientation=\"vertical\"\r\n        style=\"@style/wearkit.Group\">\r\n```\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_group.png)\r\n\r\n**Button**\r\n\r\n```xml\r\n<Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        style=\"@style/wearkit.Button\"\r\n        android:text=\"Button\" />\r\n```\r\n![alt sample](https://raw.githubusercontent.com/florent37/WearKit/master/wear/src/main/res/drawable/sample_button.png)\r\n\r\n\r\nDependencies\r\n--------\r\n\r\n- Using menu logos from [http://www.sketchappsources.com/free-source/960-apple-watch-menu-ui-kit-sketch-freebie-resource.html][logos_menu]\r\n- ViewPagerIndicator (from Jake Wharton) [https://github.com/JakeWharton/Android-ViewPagerIndicator][viewpager_indicator]\r\n\r\nTODO\r\n--------\r\n\r\n- Implement custom scrollbar, with 1/3 screen height\r\n\r\nCommunity\r\n--------\r\n\r\nLooking for contributors, feel free to fork !\r\n\r\nWear\r\n--------\r\n\r\nIf you want to learn wear development : [http://tutos-android-france.com/developper-une-application-pour-les-montres-android-wear/][tuto_wear].\r\n\r\nCredits\r\n-------\r\n\r\nAuthor: Florent Champigny\r\n\r\n<a href=\"https://plus.google.com/+florentchampigny\">\r\n  <img alt=\"Follow me on Google+\"\r\n       src=\"https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/gplus.png\" />\r\n</a>\r\n<a href=\"https://twitter.com/florent_champ\">\r\n  <img alt=\"Follow me on Twitter\"\r\n       src=\"https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/twitter.png\" />\r\n</a>\r\n<a href=\"https://www.linkedin.com/profile/view?id=297860624\">\r\n  <img alt=\"Follow me on LinkedIn\"\r\n       src=\"https://raw.githubusercontent.com/florent37/DaVinci/master/mobile/src/main/res/drawable-hdpi/linkedin.png\" />\r\n</a>\r\n\r\n\r\nLicense\r\n--------\r\n\r\n    Copyright 2015 florent37, Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n\r\n[snap]: https://oss.sonatype.org/content/repositories/snapshots/\r\n[tuto_wear]: http://tutos-android-france.com/developper-une-application-pour-les-montres-android-wear/\r\n[logos_menu]: http://www.sketchappsources.com/free-source/960-apple-watch-menu-ui-kit-sketch-freebie-resource.html\r\n[viewpager_indicator]: https://github.com/JakeWharton/Android-ViewPagerIndicator][viewpager_indicator","google":"UA-61134097-5","note":"Don't delete this file! It's used internally to help with page regeneration."}